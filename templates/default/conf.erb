# This file was generated by Chef for <%= node['fqdn'] %>
# Do NOT modify this file by hand!

<% unless @gpg_key_enc.nil? -%>
GPG_KEYS_ENC='<%= @gpg_keys_enc.flatten.join ',' %>'
<% end -%>

<% unless @gpg_key_sign.nil? -%>
GPG_KEY_SIGN='<%= @gpg_key_sign %>'
<% end -%>

<% unless @gpg_pw.nil? -%>
GPG_PW='<%= @gpg_pw %>'
<% end -%>

<% unless @gpg_pw_sign.nil? -%>
GPG_PW_SIGN='<%= @gpg_pw_sign %>'
<% end -%>

# gpg options passed from duplicity to gpg process (default='')
# e.g. "--trust-model pgp|classic|direct|always"
#   or "--compress-algo=bzip2 --bzip2-compress-level=9"
#   or "--personal-cipher-preferences AES256,AES192,AES..."
#GPG_OPTS=''

# disable preliminary tests with the following setting
#GPG_TEST='disabled'

# credentials & server address of the backup target (URL-Format)
TARGET='<%= @target %>'


# This is needed even if with an empty value.
TARGET_USER='<%= @target_user %>'

# optionally the username/password can be defined as extra variables
# setting them here _and_ in TARGET results in an error
<% unless @target_pass.nil? -%>
TARGET_PASS='<%= @target_pass %>'
<% end -%>

# Environment variables for Swift (Open Stack object store) backend
<% unless @swift_username.nil? or @swift_password.nil? or @swift_authurl.nil? -%>
export SWIFT_USERNAME='<%= @swift_username %>'
export SWIFT_PASSWORD='<%= @swift_password %>'
export SWIFT_TENANTNAME='<%= @swift_tenant %>'
export SWIFT_AUTHURL='<%= @swift_authurl %>'
export SWIFT_AUTHVERSION=<%= @swift_authversion%>
<% end -%>

# base directory to backup
SOURCE='/'

# exclude folders containing exclusion file (since duplicity 0.5.14)
# Uncomment the following two lines to enable this setting.
#FILENAME='.duplicity-ignore'
#DUPL_PARAMS="$DUPL_PARAMS --exclude-if-present '$FILENAME'"

# Time frame for old backups to keep, Used for the "purge" command.
MAX_AGE=<%= @max_age %>

<% if @max_full_backups -%>
# Number of full backups to keep. Used for the "purge-full" command.
MAX_FULL_BACKUPS=<%= @max_full_backups %>
<% end -%>

<% if @max_fullbkp_age -%>
# Forces a full backup if last full backup reaches a specified age
MAX_FULLBKP_AGE=<%= @max_fullbkp_age %>
DUPL_PARAMS="$DUPL_PARAMS --full-if-older-than $MAX_FULLBKP_AGE "
<% end -%>

# set the size of backup chunks to VOLSIZE MB instead of the default 25MB.
VOLSIZE=<%= @volsize %>
DUPL_PARAMS="$DUPL_PARAMS --volsize $VOLSIZE "

# verbosity of output (error 0, warning 1-2, notice 3-4, info 5-8, debug 9)
# default is 4, if not set
#VERBOSITY=5

# temporary file space. at least the size of the biggest file in backup
# for a successful restoration process. (default is '/tmp', if not set)
TEMP_DIR=<%= @temp_dir %>

# Modifies archive-dir option (since 0.6.0) Defines a folder that holds
# unencrypted meta data of the backup, enabling new incrementals without the
# need to decrypt backend metadata first. If empty or deleted somehow, the
# private key and it's password are needed.
# NOTE: This is confidential data. Put it somewhere safe. It can grow quite
#       big over time so you might want to put it not in the home dir.
# default '~/.cache/duplicity/duply_<profile>/'
# if set  '${ARCH_DIR}/<profile>'
#ARCH_DIR=/some/space/safe/.duply-cache


# more duplicity command line options can be added in the following way
# don't forget to leave a separating space char at the end
#DUPL_PARAMS="$DUPL_PARAMS --put_your_options_here "
<% unless @additional_params.nil? -%>
DUPL_PARAMS="$DUPL_PARAMS '<%= @gadditional_params %>'
<% end -%>
